name: Release

permissions:
  contents: write

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: taiki-e/create-gh-release-action@v1
      with:
        changelog: CHANGELOG.md
        token: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: create-release
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: aarch64-linux
          target: aarch64-unknown-linux-gnu
          os: ubuntu-24.04-arm
        - name: aarch64-macos
          target: aarch64-apple-darwin
          os: macos-latest
        - name: aarch64-windows
          target: aarch64-pc-windows-msvc
          os: windows-latest
        - name: x86_64-linux
          target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - name: x86_64-macos
          target: x86_64-apple-darwin
          os: macos-latest
        - name: x86_64-windows
          target: x86_64-pc-windows-msvc
          os: windows-latest
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y libasound2-dev
      if: startsWith(matrix.os, 'ubuntu')
    - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
      if: endsWith(matrix.target, 'windows-msvc')
    - name: Build and upload binaries
      uses: taiki-e/upload-rust-binary-action@v1
      with:
        archive: sonas-$tag-${{ matrix.name }}
        bin: sonas,sonasd,sonasctl
        target: ${{ matrix.target }}
        tar: unix
        zip: windows
        token: ${{ secrets.GITHUB_TOKEN }}
        include: README.md,LICENCE
  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
